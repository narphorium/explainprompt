{"version":3,"file":"library.js","sources":["../src/StepContext.tsx","../src/components/NamedBlock.tsx","../src/components/BlockList.tsx","../src/components/Pagination.tsx","../src/components/BlockStream.tsx","../src/components/CodeSection.tsx","../src/components/ContentBlock.tsx","../src/components/ContentSection.tsx","../src/components/ContentSpan.tsx","../src/components/BlockFactory.tsx","../src/parser.ts","../src/Widget.tsx"],"sourcesContent":["import React, { createContext, useEffect, useReducer } from \"react\";\nexport const SelectedStepContext = createContext({\n    step: 1,\n    setStep: (step) => { }\n});\nexport const SelectedElementContext = createContext({\n    element: undefined,\n    setElement: (element) => { }\n});\nexport const ScrollFlagContext = createContext({\n    flag: false,\n    toggle: () => { }\n});\nexport class StepState {\n    step = 1;\n    numSteps = 1;\n}\n;\nexport const StepReducer = (state, action) => {\n    switch (action.type) {\n        case \"start\":\n            return {\n                step: 1,\n                numSteps: state.numSteps\n            };\n        case \"end\":\n            return {\n                step: Math.max(1, state.numSteps),\n                numSteps: state.numSteps\n            };\n        case \"previous\":\n            return {\n                step: Math.max(1, state.step - 1),\n                numSteps: state.numSteps\n            };\n        case \"next\":\n            return {\n                step: Math.min(state.numSteps, state.step + 1),\n                numSteps: state.numSteps\n            };\n        case \"goto\":\n            return {\n                step: Math.min(state.numSteps, Math.max(1, action.step)),\n                numSteps: state.numSteps\n            };\n        default:\n            throw new Error(\"Invalid action\");\n    }\n};\nexport const StepContext = createContext(null);\nexport const StepDispatchContext = createContext(null);\nexport const StepProvider = ({ step, numSteps, onChange, children }) => {\n    const [state, dispatch] = useReducer(StepReducer, {\n        step: step,\n        numSteps: numSteps\n    });\n    useEffect(() => {\n        if (onChange) {\n            onChange(state);\n        }\n    }, [state]);\n    return React.createElement(StepContext.Provider, { value: state },\n        React.createElement(StepDispatchContext.Provider, { value: dispatch }, children));\n};\n//# sourceMappingURL=StepContext.js.map","import { BlockListItem, NamedBlock, selectedVariants } from 'ai-construction-set';\nimport styled from \"styled-components\";\nimport theme from 'styled-theming';\nexport const promptTextColor = selectedVariants('mode', {\n    default: { light: '#666', dark: '#bbb' },\n    selected: { light: '#222', dark: '#ffde98' },\n});\nconst selectedTextColor = theme('mode', {\n    light: '#222',\n    dark: '#ffde98',\n});\nexport const promptBgColor = selectedVariants('mode', {\n    default: { light: 'transparent', dark: 'transparent' },\n    selected: { light: 'rgb(253 235 184)', dark: 'rgb(73 69 61)' },\n});\nexport const promptBorderColor = selectedVariants('mode', {\n    default: { light: '#ccc', dark: '#595b60' },\n    selected: { light: 'rgb(237, 211, 137)', dark: 'rgb(109 102 81)' },\n});\nexport const promptFont = '\"Roboto Mono\", monospace';\nexport const PromptNamedContentBlock = styled(NamedBlock) `\n    color: ${promptTextColor};\n    background-color: ${promptBgColor};\n    border-color: ${promptBorderColor};\n    font-family: ${promptFont};\n\n    & .aics-collapsible-block-title {\n        color: ${promptTextColor};\n    }\n\n    &.selected .aics-collapsible-block-title {\n        color: ${selectedTextColor};\n    }\n\n    & .aics-collapsible-block-control svg path {\n        fill: ${promptTextColor};\n    }\n`;\nexport const promptListItemBorderColor = theme('mode', {\n    light: '#ccc',\n    dark: '#595b60',\n});\nexport const PromptBlockListItem = styled(BlockListItem) `\n    border-color: ${promptListItemBorderColor};\n    background-color: ${promptBgColor};\n`;\nconst promptToolTextColor = selectedVariants('mode', {\n    default: { light: '#222', dark: '#b3d7f8' },\n    selected: { light: '#222', dark: '#bcdefe' },\n});\nconst promptToolBgColor = selectedVariants('mode', {\n    default: { light: 'transparent', dark: 'transparent' },\n    selected: { light: '#d8edff', dark: 'rgb(60 108 194 / 24%)' },\n});\nconst promptToolSelectedTextColor = theme('mode', {\n    light: '#222',\n    dark: '#bcdefe'\n});\nexport const PromptToolListItem = styled(PromptBlockListItem) `\n    color: ${promptToolTextColor};\n    background-color: ${promptToolBgColor};\n\n    &.selected .aics-content-span,\n    &.selected .aics-content-section > span > label {\n        color: ${promptToolSelectedTextColor} !important;\n    }\n`;\n//# sourceMappingURL=NamedBlock.js.map","import { BlockList } from 'ai-construction-set';\nimport styled from \"styled-components\";\nimport { promptBgColor, promptBorderColor, promptTextColor } from './NamedBlock';\nexport const PromptBlockList = styled(BlockList) `\n    background-color: ${promptBgColor};\n    border-color: ${promptBorderColor};\n    color: ${promptTextColor};\n`;\n//# sourceMappingURL=BlockList.js.map","import React from 'react';\nimport { styled } from 'styled-components';\nimport theme from 'styled-theming';\nexport const PaginationComponent = ({ className, page, numPages, showEnds, setPage }) => {\n    const [btn1, setBtn1] = React.useState('');\n    const [btn2, setBtn2] = React.useState('');\n    const [btn3, setBtn3] = React.useState('');\n    const [btn4, setBtn4] = React.useState('');\n    const getClasses = () => {\n        let classes = ['aics-pagination'];\n        if (className) {\n            if (typeof className === 'string') {\n                classes.push(className);\n            }\n            else if (Array.isArray(className)) {\n                classes = classes.concat(className);\n            }\n        }\n        return classes.join(' ');\n    };\n    const pulseButton = (btn, setBtn) => {\n        setBtn('pulse1');\n        setTimeout(() => {\n            setBtn('');\n        }, 400);\n    };\n    const gotoPage = React.useCallback((new_page) => {\n        new_page = Math.min(numPages, Math.max(1, new_page));\n        if (new_page !== page) {\n            setPage(new_page);\n        }\n    }, [page, setPage]);\n    const gotoStart = React.useCallback(() => {\n        gotoPage(1);\n        pulseButton(btn1, setBtn1);\n    }, [page, setPage]);\n    const gotoEnd = React.useCallback(() => {\n        gotoPage(numPages);\n        pulseButton(btn4, setBtn4);\n    }, [page, setPage]);\n    const previousStep = React.useCallback(() => {\n        gotoPage(page - 1);\n        pulseButton(btn2, setBtn2);\n    }, [page, setPage]);\n    const nextStep = React.useCallback(() => {\n        gotoPage(page + 1);\n        pulseButton(btn3, setBtn3);\n    }, [page, setPage]);\n    if (showEnds === true) {\n        return React.createElement(\"div\", { className: getClasses() },\n            React.createElement(\"button\", { className: \"button-start \" + btn1, title: \"Return to start\", onClick: gotoStart },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"first_page\")),\n            React.createElement(\"button\", { className: \"button-end \" + btn2, title: \"Previous page\", onClick: previousStep },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"chevron_left\")),\n            React.createElement(\"span\", { className: \"page\" },\n                page,\n                \" of \",\n                numPages),\n            React.createElement(\"button\", { className: \"button-start \" + btn3, title: \"Next page\", onClick: nextStep },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"chevron_right\")),\n            React.createElement(\"button\", { className: \"button-end \" + btn4, title: \"Jump to end\", onClick: gotoEnd },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"last_page\")));\n    }\n    else {\n        return React.createElement(\"div\", { className: getClasses() },\n            React.createElement(\"button\", { className: \"button-start button-end \" + btn2, title: \"Previous step [\\u2190]\", onClick: previousStep },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"chevron_left\")),\n            React.createElement(\"span\", { className: \"page\" },\n                page,\n                \" of \",\n                numPages),\n            React.createElement(\"button\", { className: \"button-start button-end \" + btn3, title: \"Next step [\\u2192]\", onClick: nextStep },\n                React.createElement(\"span\", { className: \"material-icons material-icons-outlined\" }, \"chevron_right\")));\n    }\n};\nconst buttonBgColor = theme('mode', {\n    light: '#e3e3e3',\n    dark: 'rgba(255 255 255 / 7%)',\n});\nconst buttonTextColor = theme('mode', {\n    light: '#6e7071',\n    dark: '#bbbec9',\n});\nconst buttonHoverBgColor = theme('mode', {\n    light: '#ccc',\n    dark: 'rgba(255 255 255 / 20%)',\n});\nconst buttonPulseBgColor = theme('mode', {\n    light: '#a6a6ab',\n    dark: 'rgba(255 255 255 / 30%)',\n});\nexport const Pagination = styled(PaginationComponent) `\n    text-align: left;\n\n    .page {\n        vertical-align: top;\n        line-height: 22px;\n        margin: 0 8px;\n        font-family: Arial, Helvetica, sans-serif;\n        font-size: 9pt;\n    }\n      \n    button {\n        border: 0;\n        background-color: ${buttonBgColor};\n        border-radius: 8px;\n        color: ${buttonTextColor};\n        margin: 0 1px;\n        padding: 0 2px;\n        height: 22px;\n\n        span {\n            font-size: 18px;\n            margin: 1px 0;\n        }\n    }\n\n    button.button-start {\n        border-top-left-radius: 4px;\n        border-bottom-left-radius: 4px;\n    }\n\n    button.button-end {\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n    }\n      \n    button:hover {\n        background-color: ${buttonHoverBgColor};\n    }\n      \n    button:focus {\n        outline: 0;\n    }\n\n    button.pulse1 {\n        animation-name: pulse1;\n        animation-duration: 0.2s;\n        animation-iteration-count: 1;\n        animation-direction: alternate-reverse;\n        animation-timing-function: ease;\n    }\n      \n    @keyframes pulse1 {\n        0% {}\n        50% {\n          background-color: ${buttonPulseBgColor};\n        }\n        100% {}\n    }\n`;\n//# sourceMappingURL=Pagination.js.map","import { BlockFactoryContext, selectedVariants } from 'ai-construction-set';\nimport React, { forwardRef, useContext } from 'react';\nimport styled from 'styled-components';\nimport { Pagination } from './Pagination';\nexport const BlockStreamComponent = forwardRef(({ className, stream, page, setPage }, ref) => {\n    const { factory, setFactory } = useContext(BlockFactoryContext);\n    let numPages = 1;\n    stream.blocks.forEach((block) => {\n        if (block.iteration !== undefined && block.iteration > numPages) {\n            numPages = block.iteration;\n        }\n    });\n    const getClasses = () => {\n        let classes = ['aics-block-stream'];\n        if (className) {\n            if (typeof className === 'string') {\n                classes.push(className);\n            }\n            else if (Array.isArray(className)) {\n                classes = classes.concat(className);\n            }\n        }\n        return classes.join(' ');\n    };\n    if (numPages > 1) {\n        return React.createElement(\"div\", { ref: ref, className: getClasses() },\n            React.createElement(\"label\", { className: 'aics-block-stream-page-label' }, stream.name),\n            React.createElement(Pagination, { page: page, numPages: numPages, setPage: setPage }),\n            React.createElement(\"div\", { className: 'aics-block-stream-content' }, stream.blocks.filter((block) => block.iteration === page).map((block, index) => {\n                return factory?.build(block, stream);\n            })));\n    }\n    else {\n        return React.createElement(\"div\", { ref: ref, className: getClasses() },\n            React.createElement(\"div\", { className: 'aics-block-stream-content' }, stream.blocks.map((block, index) => {\n                return factory?.build(block, stream);\n            })));\n    }\n});\nconst textColor = selectedVariants('mode', {\n    default: { light: '#eee', dark: '#333' },\n    selected: { light: '#222', dark: '#ffde98' },\n});\nexport const BlockStream = styled(BlockStreamComponent) `\nmargin-top: 12px;\nmargin-bottom: 12px;\n\n.aics-block-stream .aics-block-stream-content {\n    margin-left: 24px;\n}\n\n& > label {\n    font-size: 10pt;\n    color: #eee;\n    margin-right: 8px;\n    margin-left: 24px;\n    background-color: rgb(0 0 0 / 30%);\n    padding: 3px 8px;\n    border-radius: 4px;\n}\n\n.aics-pagination {\n    display: inline-block;\n    vertical-align: top;\n}\n`;\n//# sourceMappingURL=BlockStream.js.map","import { python } from '@codemirror/lang-python';\nimport { vscodeDark } from '@uiw/codemirror-theme-vscode';\nimport CodeMirror from '@uiw/react-codemirror';\nimport React, { forwardRef } from 'react';\nimport { styled } from 'styled-components';\nconst CodeSectionComponent = forwardRef(({ className, code, extensions, selected, onSelected, onClick, onChange, editable, key }, ref) => {\n    const getClasses = () => {\n        let classes = ['aics-code-section'];\n        if (className) {\n            if (typeof className === 'string') {\n                classes.push(className);\n            }\n            else if (Array.isArray(className)) {\n                classes = classes.concat(className);\n            }\n        }\n        if (selected) {\n            classes.push('selected');\n        }\n        return classes.join(' ');\n    };\n    const handleClick = (e) => {\n        if (onClick !== undefined) {\n            onClick(e);\n        }\n    };\n    let codeContent = '';\n    code.spans.forEach((span) => {\n        codeContent += span.content;\n    });\n    let config = [];\n    if (extensions !== undefined) {\n        config = config.concat(extensions);\n    }\n    config.push(python());\n    return (React.createElement(\"div\", { ref: ref, className: getClasses(), onClick: handleClick },\n        React.createElement(CodeMirror, { value: codeContent, basicSetup: false, theme: vscodeDark, editable: editable, extensions: config, onChange: (value, view_update) => {\n                if (onChange !== undefined) {\n                    onChange(value, view_update);\n                }\n            } })));\n});\nexport const CodeSection = styled(CodeSectionComponent) `\n  background-color: #303030;\n  font-size: 9.5pt;\n  padding: 4px;\n  border-radius: 4px;\n`;\n//# sourceMappingURL=CodeSection.js.map","import { ContentBlock, selectedVariants } from 'ai-construction-set';\nimport styled from \"styled-components\";\nimport theme from 'styled-theming';\n/* Model response */\nconst responseTextColor = selectedVariants('mode', {\n    default: { light: '#222', dark: '#292b2f' },\n    selected: { light: '#222', dark: '#ffde98' },\n});\nconst responseBgColor = selectedVariants('mode', {\n    default: { light: 'white', dark: '#292b2f' },\n    selected: { light: 'rgb(253 235 184)', dark: 'rgb(73 69 61)' },\n});\nconst responseBorderColor = selectedVariants('mode', {\n    default: { light: '#ccc', dark: '#595b60' },\n    selected: { light: 'rgb(237, 211, 137)', dark: 'rgb(109 102 81)' },\n});\nexport const ModelResponse = styled(ContentBlock) `\n    color: ${responseTextColor};\n    background-color: ${responseBgColor};\n    border-color: ${responseBorderColor};\n`;\n/* Tool Response */\nconst toolResponseTextColor = selectedVariants('mode', {\n    default: { light: '#222', dark: '#b3d7f8' },\n    selected: { light: '#222', dark: '#bcdefe' },\n});\nconst toolResponseBgColor = selectedVariants('mode', {\n    default: { light: 'rgb(242 249 255)', dark: '#292b2f' },\n    selected: { light: '#d8edff', dark: 'rgb(60 108 194 / 24%)' },\n});\nconst toolResponseBorderColor = selectedVariants('mode', {\n    default: { light: '#b4d9ff', dark: '#4a5f79' },\n    selected: { light: '#a0c1e3', dark: '#4a5f79' },\n});\nconst toolResponseSelectedTextColor = theme('mode', {\n    light: '#222',\n    dark: '#bcdefe'\n});\nexport const ToolResponse = styled(ContentBlock) `\n    color: ${toolResponseTextColor};\n    background-color: ${toolResponseBgColor};\n    border-color: ${toolResponseBorderColor};\n\n    & .aics-content-section > span > label,\n    & .aics-content-span {\n        color: ${toolResponseTextColor} !important;\n    }\n\n    &.selected .aics-content-span,\n    &.selected .aics-content-section > span > label {\n        color: ${toolResponseSelectedTextColor} !important;\n    }\n`;\n/* Descriptions */\nconst descriptionTextColor = theme('mode', {\n    light: '#222',\n    dark: '#ffde98',\n});\nconst descriptionBgColor = theme('mode', {\n    light: 'rgb(253 235 184)',\n    dark: 'rgb(73 69 61)',\n});\nconst descriptionBorderColor = theme('mode', {\n    light: 'rgb(237, 211, 137)',\n    dark: 'rgb(109 102 81)',\n});\nconst toolDescriptionTextColor = theme('mode', {\n    light: '#222',\n    dark: '#bcdefe',\n});\nconst toolDescriptioneBgColor = theme('mode', {\n    light: '#d8edff',\n    dark: 'rgb(60 108 194 / 24%)',\n});\nconst toolDescriptionBorderColor = theme('mode', {\n    light: '#a0c1e3',\n    dark: '#4a5f79',\n});\nexport const DescriptionBlock = styled(ContentBlock) `\n    color: ${descriptionTextColor};\n    background-color: ${descriptionBgColor};\n    border-color: ${descriptionBorderColor};\n\n    & a {\n        color: ${descriptionTextColor};\n    }\n\n    &.tool-description {\n        color: ${toolDescriptionTextColor};\n        background-color: ${toolDescriptioneBgColor};\n        border-color: ${toolDescriptionBorderColor};\n\n        .aics-content-span,\n        .aics-content-section > span > label {\n            color: ${toolResponseSelectedTextColor} !important;\n        }\n\n        a {\n            color: ${toolResponseSelectedTextColor};\n        }\n    }\n`;\n//# sourceMappingURL=ContentBlock.js.map","import { ContentSection } from 'ai-construction-set';\nimport styled from \"styled-components\";\nimport theme from 'styled-theming';\nimport { promptTextColor } from './NamedBlock';\nconst selectedLabelColor = theme('mode', {\n    light: '#222',\n    dark: '#ffde98',\n});\nexport const PromptContentSection = styled(ContentSection) `\n    color: ${promptTextColor} !important;\n    font-size: 10pt;\n    \n    & > span > label {\n        color: ${promptTextColor} !important;\n    }\n\n    .selected & > span > label {\n        color: ${selectedLabelColor} !important;\n    }\n`;\n//# sourceMappingURL=ContentSection.js.map","import { ContentSpan, selectedVariants } from 'ai-construction-set';\nimport styled from \"styled-components\";\nimport theme from 'styled-theming';\nimport { promptFont } from './NamedBlock';\nexport const spanTextColor = selectedVariants('mode', {\n    default: { light: 'inherit', dark: 'inherit' },\n    selected: { light: '#222', dark: '#ffde98' },\n});\nconst selectedChildSpanColor = theme('mode', {\n    light: '#222',\n    dark: '#ffde98',\n});\nconst selectedChildBgColor = theme('mode', {\n    light: 'rgb(0 0 0 / 8%)',\n    dark: 'rgb(255 255 255 / 8%)',\n});\nexport const PromptContentSpan = styled(ContentSpan) `\n    color: ${spanTextColor};\n    font-family: ${promptFont};\n    font-size: 10pt;\n\n    .selected & {\n        color: ${selectedChildSpanColor} !important;\n    }\n`;\nexport const toolTextColor = selectedVariants('mode', {\n    default: { light: '#007fff', dark: '#7dbdff' },\n    selected: { light: '#fff', dark: '#fff' },\n});\nexport const toolBgColor = selectedVariants('mode', {\n    default: { light: 'rgb(0 127 255 / 10%)', dark: 'rgb(84 169 255 / 20%)' },\n    selected: { light: 'rgb(82 162 244)', dark: 'rgb(47 98 161)' },\n});\nexport const ToolContentSpan = styled(PromptContentSpan) `\n    color: ${toolTextColor};\n    background-color: ${toolBgColor};\n    font-family: ${promptFont};\n    padding: 2px 6px 2px 22px;\n    border-radius: 4px;\n    position: relative;\n    font-size: 10pt;\n    display: inline-block;\n\n    &::before {\n        position: absolute;\n        top: 5px;\n        left: 6px;\n        content: \"\\\\eb6d\";\n        font: normal normal normal 12px/1 codicon;\n        text-decoration: none;\n        text-rendering: auto;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .selected & {\n        color: ${selectedChildSpanColor} !important;\n        background-color: ${selectedChildBgColor};\n    }\n`;\nexport const promptToolTextColor = selectedVariants('mode', {\n    default: { light: 'inherit', dark: 'inherit' },\n    selected: { light: '#fff', dark: '#ffde98' },\n});\nexport const promptToolBgColor = selectedVariants('mode', {\n    default: { light: 'rgb(0 0 0 / 8%)', dark: 'rgb(255 255 255 / 8%)' },\n    selected: { light: 'rgb(82 162 244)', dark: 'rgb(47 98 161)' },\n});\nexport const PromptToolContentSpan = styled(ToolContentSpan) `\n    color: ${promptToolTextColor};\n    background-color: ${promptToolBgColor};\n`;\nexport const specialTokenTextColor = selectedVariants('mode', {\n    default: { light: '#666', dark: '#bbb' },\n    selected: { light: '#222', dark: '#ffde98' },\n});\nexport const specialTokenBgColor = selectedVariants('mode', {\n    default: { light: 'rgb(0 0 0 / 8%)', dark: 'rgb(255 255 255 / 8%)' },\n    selected: { light: 'rgb(253 235 184)', dark: 'rgb(73 69 61)' },\n});\nexport const SpecialTokenSpan = styled(PromptContentSpan) `\n    color: ${specialTokenTextColor};\n    background-color: ${specialTokenBgColor};\n    margin: 0 4px;\n    padding: 2px 6px;\n    border-radius: 4px;\n    display: inline-block;\n`;\n//# sourceMappingURL=ContentSpan.js.map","import { BlockList, BlockListItem, Content, ContentSection, ContentSpan, DefaultBlockFactory, List, NamedBlock, Section, Selectable, SentinalView, Stream } from 'ai-construction-set';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { SelectedElementContext, StepContext, StepDispatchContext } from '../StepContext';\nimport { PromptBlockList } from './BlockList';\nimport { BlockStream } from './BlockStream';\nimport { CodeSection } from './CodeSection';\nimport { ModelResponse, ToolResponse } from './ContentBlock';\nimport { PromptContentSection } from './ContentSection';\nimport { PromptContentSpan, PromptToolContentSpan, SpecialTokenSpan, ToolContentSpan } from './ContentSpan';\nimport { PromptBlockListItem, PromptNamedContentBlock, PromptToolListItem } from './NamedBlock';\nexport class PaperBlockFactory extends DefaultBlockFactory {\n    getClassNames(block, selected_index) {\n        const classNames = [];\n        if (block instanceof Selectable) {\n            if (block.selection_index !== null) {\n                classNames.push('selectable');\n            }\n            if (selected_index === block.selection_index) {\n                classNames.push('selected');\n            }\n        }\n        return classNames;\n    }\n    ;\n    useStep() {\n        return useContext(StepContext);\n    }\n    useSelected(block) {\n        const step = this.useStep();\n        const [selected, setSelected] = useState(block.selected);\n        useEffect(() => {\n            if (step != undefined) {\n                setSelected(block.selection_index === step?.step);\n            }\n        }, [step]);\n        return { selected, setSelected };\n    }\n    scrollToSelected(element) {\n        return () => {\n            if (element !== undefined) {\n                element.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\"\n                });\n            }\n        };\n    }\n    scrollOnSelected(ref, setElement) {\n        return (selected) => {\n            if (selected && ref.current) {\n                setElement(ref.current);\n                ref.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\"\n                });\n            }\n        };\n    }\n    getContentSelectedChildren(block, selected_index) {\n        let selected = this.getSelectableSelectedChildren(block, selected_index);\n        block.children.forEach((child) => {\n            selected = selected.concat(this.getSelectedChildren(child, selected_index));\n        });\n        return selected;\n    }\n    ;\n    getSectionSelectedChildren(block, selected_index) {\n        let selected = this.getSelectableSelectedChildren(block, selected_index);\n        block.spans.forEach((span) => {\n            selected = selected.concat(this.getSelectedChildren(span, selected_index));\n        });\n        return selected;\n    }\n    ;\n    getSelectableSelectedChildren(block, selected_index) {\n        if (block.selection_index && block.selection_index <= selected_index) {\n            return [block];\n        }\n        return [];\n    }\n    getListSelectedChildren(block, selected_index) {\n        let selected = [];\n        block.items.forEach((item) => {\n            selected = selected.concat(this.getSelectedChildren(item, selected_index));\n        });\n        return selected;\n    }\n    getStreamSelectedChildren(block, selected_index) {\n        let selected = [];\n        block.blocks.forEach((item) => {\n            selected = selected.concat(this.getSelectedChildren(item, selected_index));\n        });\n        return selected;\n    }\n    getSelectedChildren(block, selected_index) {\n        if (block instanceof List) {\n            return this.getListSelectedChildren(block, selected_index);\n        }\n        else if (block instanceof Content) {\n            return this.getContentSelectedChildren(block, selected_index);\n        }\n        else if (block instanceof Section) {\n            return this.getSectionSelectedChildren(block, selected_index);\n        }\n        else if (block instanceof Selectable) {\n            return this.getSelectableSelectedChildren(block, selected_index);\n        }\n        else if (block instanceof Stream) {\n            return this.getStreamSelectedChildren(block, selected_index);\n        }\n        return [];\n    }\n    useCollapsed(block) {\n        const { element, setElement } = useContext(SelectedElementContext);\n        const step = this.useStep();\n        const [collapsed, setCollapsed] = useState(block.collapsed);\n        useEffect(() => {\n            if (step != undefined) {\n                setCollapsed(this.getSelectedChildren(block, step.step).length === 0);\n            }\n        }, [step]);\n        const toggleCollapsed = useCallback((c) => {\n            setCollapsed(!c);\n            setElement(undefined); // Don't scroll when manually collapsing\n        }, [collapsed]);\n        return { collapsed, toggleCollapsed };\n    }\n    gotoStep = (block) => {\n        const dispatch = useContext(StepDispatchContext);\n        return () => {\n            if (dispatch !== undefined && block.selection_index !== null) {\n                dispatch?.({ type: 'goto', step: block.selection_index });\n            }\n        };\n    };\n    buildNamedContent(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const { collapsed, toggleCollapsed } = this.useCollapsed(block);\n        const ref = useRef(null);\n        if (block.classNames.has('prompt-named-content')) {\n            return React.createElement(PromptNamedContentBlock, { ref: ref, className: this.getClassNames(block, step?.step), content: block, collapsed: collapsed, onToggle: toggleCollapsed, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onTransitionEnd: this.scrollToSelected(element), key: block.uuid });\n        }\n        else {\n            return React.createElement(NamedBlock, { ref: ref, className: this.getClassNames(block, step?.step), content: block, collapsed: collapsed, onToggle: toggleCollapsed, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onTransitionEnd: this.scrollToSelected(element), key: block.uuid });\n        }\n    }\n    buildListItem(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const { collapsed, toggleCollapsed } = this.useCollapsed(block);\n        const ref = useRef(null);\n        if (block.classNames.has('prompt-tool-named-content')) {\n            return React.createElement(PromptToolListItem, { ref: ref, className: this.getClassNames(block, step?.step), content: block, collapsed: collapsed, onToggle: toggleCollapsed, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onTransitionEnd: this.scrollToSelected(element), key: block.uuid });\n        }\n        else if (block.classNames.has('prompt-named-content')) {\n            return React.createElement(PromptBlockListItem, { ref: ref, className: this.getClassNames(block, step?.step), content: block, collapsed: collapsed, onToggle: toggleCollapsed, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onTransitionEnd: this.scrollToSelected(element), key: block.uuid });\n        }\n        else {\n            return React.createElement(BlockListItem, { ref: ref, className: this.getClassNames(block, step?.step), content: block, collapsed: collapsed, onToggle: toggleCollapsed, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onTransitionEnd: this.scrollToSelected(element), key: block.uuid });\n        }\n    }\n    buildContent(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const ref = useRef(null);\n        if (block.classNames.has('tool-response')) {\n            return React.createElement(ToolResponse, { ref: ref, className: this.getClassNames(block, step?.step), content: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n        }\n        else {\n            return React.createElement(ModelResponse, { ref: ref, className: this.getClassNames(block, step?.step), content: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n        }\n    }\n    buildList(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const ref = useRef(null);\n        if (block.classNames.has('prompt-list')) {\n            return React.createElement(PromptBlockList, { ref: ref, className: this.getClassNames(block, step?.step), list: block, selected: false, key: block.uuid });\n        }\n        else {\n            return React.createElement(BlockList, { ref: ref, className: this.getClassNames(block, step?.step), list: block, selected: false, key: block.uuid });\n        }\n    }\n    buildSection(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const ref = useRef(null);\n        if (block.classNames.has('code')) {\n            return React.createElement(CodeSection, { ref: ref, className: this.getClassNames(block, step?.step), code: block, selected: selected, editable: false, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n        }\n        else {\n            if (block.classNames.has('prompt-section')) {\n                return React.createElement(PromptContentSection, { ref: ref, className: this.getClassNames(block, step?.step), section: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n            else {\n                return React.createElement(ContentSection, { ref: ref, className: this.getClassNames(block, step?.step), section: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n        }\n    }\n    buildSpan(block, parent) {\n        const step = this.useStep();\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const ref = useRef(null);\n        if (block.classNames.has('special-token')) {\n            return React.createElement(SpecialTokenSpan, { ref: ref, className: this.getClassNames(block, step?.step), span: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n        }\n        else if (block.classNames.has('tool-span') || block.classNames.has('tool')) {\n            if (block.classNames.has('prompt-span')) {\n                return React.createElement(PromptToolContentSpan, { ref: ref, className: this.getClassNames(block, step?.step), span: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n            else {\n                return React.createElement(ToolContentSpan, { ref: ref, className: this.getClassNames(block, step?.step), span: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n        }\n        else {\n            if (block.classNames.has('prompt-span')) {\n                return React.createElement(PromptContentSpan, { ref: ref, className: this.getClassNames(block, step?.step), span: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n            else {\n                return React.createElement(ContentSpan, { ref: ref, className: this.getClassNames(block, step?.step), span: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), onClick: this.gotoStep(block), key: block.uuid });\n            }\n        }\n    }\n    buildSentinal(block, parent) {\n        const { element, setElement } = useContext(SelectedElementContext);\n        const { selected, setSelected } = this.useSelected(block);\n        const ref = useRef(null);\n        return React.createElement(SentinalView, { ref: ref, sentinal: block, selected: selected, onSelected: this.scrollOnSelected(ref, setElement), key: block.uuid });\n    }\n    buildStream(stream, parent) {\n        const step = this.useStep();\n        const [page, setPage] = useState(1);\n        const ref = useRef(null);\n        // Automatically turn to the selected page\n        useEffect(() => {\n            if (step != undefined) {\n                if (this.getSelectedChildren(stream, step.step)) {\n                    stream.blocks.forEach((block) => {\n                        if (block.iteration && this.getSelectedChildren(block, step.step)) {\n                            setPage(block.iteration);\n                        }\n                    });\n                }\n            }\n        }, [step]);\n        return React.createElement(BlockStream, { ref: ref, stream: stream, page: page, setPage: setPage, key: stream.uuid });\n    }\n}\n//# sourceMappingURL=BlockFactory.js.map","import { Code, Content, List, NamedContent, Section, Selectable, Span, Stream } from 'ai-construction-set';\nconst ANNOTATION_PATTERN = new RegExp(\"<mark([^>]*)>(.*?)</mark>\", 'gm');\nconst ARGS_PATTERN = new RegExp(\"(\\\\w+)=\\\"([^\\\"]*)\\\"\", 'gm');\nconst parseSpanArgs = (args) => {\n    const argMap = new Map();\n    let m;\n    while ((m = ARGS_PATTERN.exec(args)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === ARGS_PATTERN.lastIndex) {\n            ARGS_PATTERN.lastIndex++;\n        }\n        argMap.set(m[1], m[2]);\n    }\n    return argMap;\n};\nconst buildSpan = (json, content, inPrompt) => {\n    const span = new Span(content);\n    if (inPrompt) {\n        span.classNames.add('prompt-span');\n    }\n    return span;\n};\nexport const parseSpans = (json, inPrompt) => {\n    const spans = [];\n    if (json['type'] === 'action') {\n        const span = buildSpan(json, json['content'], inPrompt);\n        if (json['step']) {\n            span.selection_index = json['step'];\n        }\n        span.classNames.add('tool-span');\n        spans.push(span);\n        return spans;\n    }\n    let m;\n    let offset = 0;\n    const content = json['content'];\n    while ((m = ANNOTATION_PATTERN.exec(content)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === ANNOTATION_PATTERN.lastIndex) {\n            ANNOTATION_PATTERN.lastIndex++;\n        }\n        if (m.index > offset) {\n            const span = new Span(content.substring(offset, m.index));\n            if (inPrompt) {\n                span.classNames.add('prompt-span');\n            }\n            spans.push(span);\n        }\n        const span = buildSpan(json, m[2], inPrompt);\n        const args = parseSpanArgs(m[1]);\n        if (args.has('class')) {\n            // FIXME: Handle multiple classes\n            span.classNames.add(args.get('class'));\n        }\n        if (args.has('step')) {\n            span.selection_index = parseInt(args.get('step'));\n        }\n        spans.push(span);\n        offset = m.index + m[0].length;\n    }\n    if (offset < content.length) {\n        const span = buildSpan(json, content.substring(offset), inPrompt);\n        spans.push(span);\n    }\n    return spans;\n};\nexport const parseSection = (json, inPrompt) => {\n    let section = new Section();\n    if (json['type']) {\n        if (json['type'] === 'code') {\n            section = new Code();\n            const code = section;\n            if (json['language']) {\n                code.language = json['language'];\n            }\n        }\n        section.classNames.add(json['type']);\n    }\n    if (inPrompt) {\n        section.classNames.add('prompt-section');\n    }\n    if (json['step'] && json['type'] !== 'action') {\n        section.selection_index = json['step'];\n    }\n    let update = {};\n    if (json['label']) {\n        section.name = json['label'];\n    }\n    section.spans = parseSpans({ ...json, ...update }, inPrompt);\n    return section;\n};\nexport const parseContent = (json) => {\n    const response = new Content();\n    if (json['type']) {\n        response.classNames.add(json['type']);\n    }\n    response.children = json.sections.map((s) => parseSection(s, false));\n    if (json['step']) {\n        response.selection_index = json['step'];\n    }\n    if (json['iteration']) {\n        response.iteration = json['iteration'];\n    }\n    return response;\n};\nexport const parseNamedContent = (json, inPrompt) => {\n    const response = new NamedContent(json['label']);\n    if (json['type']) {\n        response.classNames.add(json['type']);\n    }\n    if (inPrompt) {\n        response.classNames.add('prompt-named-content');\n    }\n    response.children = json.sections.map((c) => parseSection(c, inPrompt));\n    if (json['step']) {\n        response.selection_index = json['step'];\n    }\n    if (json['iteration']) {\n        response.iteration = json['iteration'];\n    }\n    return response;\n};\nexport const parsePromptExamples = (json) => {\n    const examples = new List();\n    examples.classNames.add('prompt-list');\n    examples.items = json.examples.map((e) => parseNamedContent(e, true));\n    return examples;\n};\nexport const parseToolDefinitions = (json) => {\n    const definitions = new List();\n    definitions.classNames.add('prompt-list');\n    definitions.items = json['tools'].map((t) => {\n        const def = parseNamedContent(t, true);\n        def.classNames.add('prompt-tool-named-content');\n        return def;\n    });\n    return definitions;\n};\nexport const parsePrompt = (json) => {\n    const prompt = new NamedContent(json.label);\n    prompt.classNames.add('prompt-named-content');\n    if (json['type']) {\n        prompt.classNames.add(json['type']);\n    }\n    if (json['iteration']) {\n        prompt.iteration = json['iteration'];\n    }\n    prompt.children = json.sections.map((s) => {\n        switch (s['type']) {\n            case 'examples':\n                return parsePromptExamples(s);\n            case 'scratchpad':\n                return parseNamedContent(s, true);\n            case 'tools':\n                return parseToolDefinitions(s);\n            case 'text':\n                return parseSection(s, true);\n            default:\n                return parseSection(s, true);\n        }\n    });\n    return prompt;\n};\nexport const parseSentinal = (json) => {\n    const sentinal = new Selectable();\n    if (json['step']) {\n        sentinal.selection_index = json['step'];\n    }\n    if (json['iteration']) {\n        sentinal.iteration = json['iteration'];\n    }\n    return sentinal;\n};\nexport const parseToolResponse = (json) => {\n    const response = new Content();\n    if (json['type']) {\n        response.classNames.add(json['type']);\n    }\n    response.children = json['sections'].map(parseSection);\n    if (json['step']) {\n        response.selection_index = json['step'];\n    }\n    if (json['iteration']) {\n        response.iteration = json['iteration'];\n    }\n    return response;\n};\nconst buildStream = (data) => {\n    const stream = new Stream();\n    if (data['name']) {\n        stream.name = data['name'];\n    }\n    stream.blocks = data['blocks'];\n    return stream;\n};\nexport const parsePromptChain = (json, id = \"1\") => {\n    let current_data = [{ 'id': id, 'blocks': [] }];\n    let current_current_data = current_data[current_data.length - 1];\n    json['trajectory'].map((m) => {\n        current_current_data = current_data[current_data.length - 1];\n        if (current_data.length > 1 && m['chain']['id'] === current_data[current_data.length - 2]['id']) {\n            // If we're going back up the chain, pop the current data\n            const tmp = current_data.pop();\n            current_current_data = current_data[current_data.length - 1];\n            if (tmp && tmp['blocks'].length > 0) {\n                // If there's anything in the popped data, push it to the current data\n                current_current_data['blocks'].push(buildStream(tmp));\n            }\n        }\n        else if (m['chain']['id'] !== current_current_data['id']) {\n            // If we're going down the chain, push the current data\n            const new_data = { 'id': m['chain']['id'], 'blocks': [] };\n            if (m['chain']['label']) {\n                new_data['name'] = m['chain']['label'];\n            }\n            current_data.push(new_data);\n            current_current_data = current_data[current_data.length - 1];\n        }\n        switch (m.type) {\n            case 'tool-response':\n                current_current_data['blocks'].push(parseToolResponse(m));\n                break;\n            case 'prompt':\n                current_current_data['blocks'].push(parsePrompt(m));\n                break;\n            case 'response':\n                current_current_data['blocks'].push(parseContent(m));\n                break;\n            case 'sentinal':\n                current_current_data['blocks'].push(parseSentinal(m));\n                break;\n            default:\n                throw new Error(\"Unknown message type: \" + m.type);\n        }\n    });\n    return buildStream(current_current_data);\n};\n//# sourceMappingURL=parser.js.map","// import '@vscode/codicons/dist/codicon.css';\nimport { BlockFactoryContext } from \"ai-construction-set\";\n// import 'devicon/devicon.min.css';\nimport React, { createElement, useState } from \"react\";\nimport { createRoot } from 'react-dom/client';\nimport { ThemeProvider } from \"styled-components\";\nimport { SelectedElementContext, StepProvider } from \"./StepContext\";\nimport { PaperBlockFactory } from \"./components/BlockFactory\";\nimport { BlockStream } from \"./components/BlockStream\";\n// import './css/codicon.css';\n// import './css/inter.css';\n// import './css/material.css';\n// import './css/roboto.css';\nimport { parsePromptChain } from \"./parser\";\n;\nexport const Widget = ({ model }) => {\n    let getStream = () => {\n        const json_data = JSON.parse(model.get(\"data\"));\n        return parsePromptChain(json_data);\n    };\n    let getTheme = () => model.get(\"theme\");\n    const [stream, setStream] = useState(getStream());\n    const [theme, setTheme] = useState(getTheme());\n    const [factory, setFactory] = useState(new PaperBlockFactory());\n    const [step, setStep] = useState(1);\n    const [element, setElement] = useState();\n    model.on(\"change:data\", () => {\n        setStream(getStream());\n    });\n    model.on(\"change:theme\", () => {\n        setTheme(getTheme());\n    });\n    return React.createElement(ThemeProvider, { theme: { 'mode': theme } },\n        React.createElement(StepProvider, { step: step, numSteps: 0, onChange: () => { } },\n            React.createElement(BlockFactoryContext.Provider, { value: { factory, setFactory } },\n                React.createElement(SelectedElementContext.Provider, { value: { element, setElement } },\n                    React.createElement(BlockStream, { stream: stream, page: 1, setPage: () => { }, key: stream.uuid })))));\n};\nexport const render = ({ model, el }) => {\n    // shadow DOM as react root\n    const root = createRoot(el);\n    // render react element inside shadow DOM\n    root.render(createElement(Widget, { model: model }));\n};\n//# sourceMappingURL=Widget.js.map"],"names":["SelectedStepContext","createContext","step","setStep","SelectedElementContext","element","undefined","setElement","ScrollFlagContext","flag","toggle","StepState","numSteps","StepReducer","state","action","type","Math","max","min","Error","StepContext","StepDispatchContext","StepProvider","onChange","children","dispatch","useReducer","useEffect","React","createElement","Provider","value","promptTextColor","selectedVariants","default","light","dark","selected","selectedTextColor","theme","promptBgColor","promptBorderColor","promptFont","PromptNamedContentBlock","styled","NamedBlock","promptListItemBorderColor","PromptBlockListItem","BlockListItem","promptToolTextColor","promptToolBgColor","promptToolSelectedTextColor","PromptToolListItem","PromptBlockList","BlockList","buttonBgColor","buttonTextColor","buttonHoverBgColor","buttonPulseBgColor","Pagination","className","page","numPages","showEnds","setPage","btn1","setBtn1","useState","btn2","setBtn2","btn3","setBtn3","btn4","setBtn4","getClasses","classes","push","Array","isArray","concat","join","pulseButton","btn","setBtn","setTimeout","gotoPage","useCallback","new_page","gotoStart","gotoEnd","previousStep","nextStep","title","onClick","BlockStreamComponent","forwardRef","stream","ref","factory","setFactory","useContext","BlockFactoryContext","blocks","forEach","block","iteration","name","filter","map","index","build","BlockStream","CodeSection","code","extensions","onSelected","editable","key","codeContent","spans","span","content","config","python","e","CodeMirror","basicSetup","vscodeDark","view_update","responseTextColor","responseBgColor","responseBorderColor","ModelResponse","ContentBlock","toolResponseTextColor","toolResponseBgColor","toolResponseBorderColor","toolResponseSelectedTextColor","ToolResponse","descriptionTextColor","descriptionBgColor","descriptionBorderColor","toolDescriptionTextColor","toolDescriptioneBgColor","toolDescriptionBorderColor","DescriptionBlock","selectedLabelColor","PromptContentSection","ContentSection","spanTextColor","selectedChildSpanColor","selectedChildBgColor","PromptContentSpan","ContentSpan","toolTextColor","toolBgColor","ToolContentSpan","PromptToolContentSpan","specialTokenTextColor","specialTokenBgColor","SpecialTokenSpan","PaperBlockFactory","DefaultBlockFactory","getClassNames","selected_index","classNames","Selectable","selection_index","useStep","useSelected","this","setSelected","scrollToSelected","scrollIntoView","behavior","scrollOnSelected","current","getContentSelectedChildren","getSelectableSelectedChildren","child","getSelectedChildren","getSectionSelectedChildren","getListSelectedChildren","items","item","getStreamSelectedChildren","List","Content","Section","Stream","useCollapsed","collapsed","setCollapsed","length","toggleCollapsed","c","gotoStep","buildNamedContent","parent","useRef","has","onToggle","onTransitionEnd","uuid","buildListItem","buildContent","buildList","list","buildSection","section","buildSpan","buildSentinal","SentinalView","sentinal","buildStream","ANNOTATION_PATTERN","RegExp","ARGS_PATTERN","parseSpanArgs","args","argMap","Map","m","exec","lastIndex","set","json","inPrompt","Span","add","parseSpans","offset","substring","get","parseInt","parseSection","Code","language","parseContent","response","sections","s","parseNamedContent","NamedContent","parsePromptExamples","examples","parseToolDefinitions","definitions","t","def","parsePrompt","prompt","label","parseSentinal","parseToolResponse","data","parsePromptChain","id","current_data","current_current_data","tmp","pop","new_data","Widget","model","getStream","json_data","JSON","parse","getTheme","setStream","setTheme","on","ThemeProvider","mode","render","el","createRoot"],"mappings":"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"}